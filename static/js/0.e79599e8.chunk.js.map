{"version":3,"file":"static/js/0.e79599e8.chunk.js","mappings":"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","sources":["components/Pages/About/TopBar.js","components/Pages/Education/Education.js","components/Pages/Experience/Experience.js","components/Pages/About/TableLang.js","components/Pages/About/Skills.js","components/Pages/About/Jumbotron.js","components/Pages/About/About.js","components/Pages/Header.js"],"sourcesContent":["import React, {memo,  useState } from 'react'\nimport { Image } from 'react-bootstrap';\nimport Header from '../Header';\n\nconst TopBar = ({ data, img }) => {\n\n\n  const [paragraphs] = useState([data?.description])\n\n  let pagraphMe = ''\n  let paragraphPrev = ''\n  let pagraphSoft = ''\n  let paragrapgShift = ''\n\n  if (paragraphs) {\n    pagraphMe = paragraphs.map((par, key) => <p key={key}>{par.me}</p>)\n    paragraphPrev = paragraphs.map((par, key) => <p key={key}>{par.prev}</p>)\n    pagraphSoft = paragraphs.map((par, key) => <p key={key}>{par.soft}< br />{par.thus}</p>)\n    paragrapgShift = paragraphs.map((par, key) => <p key={key}>{par.shift}< br />{par.now}</p>)\n\n  }\n\n  return (\n    <>\n      <div className=\"topbar\">\n        <Header\n          header={data?.header.title}\n          paragraph={data?.header.paragraph}\n          name={data?.header.name}\n        />\n\n        <div className=\"aboutme\">\n          {pagraphMe}\n          {paragraphPrev}\n          {pagraphSoft}\n          <hr />\n          {paragrapgShift}\n        </div>\n      </div >\n\n      <div className=\"rectangle\">\n        {img &&\n          <Image className=\"photo\" src={img} />\n        }\n      </div>\n    </>\n  )\n\n}\n\n\nexport default memo (TopBar);","import React, { memo, useState, useEffect } from 'react'\nimport { Button } from 'react-bootstrap';\nimport { gsap } from \"gsap\"\n\nconst Education = ({ data }) => {\n    const [isVisible, setVisibility] = useState(false)\n\n    let tl = gsap.timeline()\n\n    useEffect(() => {\n        tl.from(\".exp\", .5, {\n            scale: 0.5,\n            opacity: 0,\n            stagger: 0.2,\n            ease: \"back.out(1.7)\"\n        });\n\n    }, [tl])\n\n    return (\n        <>\n            <Button variant=\"primary\" block onClick={() => setVisibility(!isVisible)}>Education</Button>\n            {\n                isVisible &&\n                <ul>\n                    {\n                        data?.sort((a, b) => b.id > a.id ? 1 : -1).map(({ time, instituion, title, subtitle, id }) => (\n                            <li key={id} className=\"exp\">\n                                <div className=\"timelineInfo\">\n                                    <p>{time}</p>\n                                </div>\n                                <div className=\"timelineMarker\"></div>\n                                <div className=\"timelineContent\">\n                                    <h5>{instituion}</h5>\n                                    <p>{title}\n                                        <em> {subtitle} </em>\n                                    </p>\n                                </div>\n                            </li>\n                        ))\n                    }\n                </ul>\n            }\n        </>\n    )\n}\n\nexport default memo(Education)","import React, { useState, useEffect, memo } from 'react'\nimport { Button } from 'react-bootstrap';\nimport { gsap } from \"gsap\"\n\nconst Experience = ({ data }) => {\n    const [isVisible, setVisibility] = useState(false)\n\n    let tl = gsap.timeline()\n\n    useEffect(() => {\n        tl.from(\".exp1\", .5, {\n            scale: 0.5,\n            opacity: 0,\n            stagger: 0.2,\n            ease: \"back.out(1.7)\"\n        });\n\n    }, [tl])\n\n    return (\n        <>\n            <Button variant=\"primary\" block onClick={() => setVisibility(!isVisible)}>Experience</Button>\n\n            {\n                isVisible &&\n                <ul>\n                    {\n                        data?.sort((a, b) => b.id > a.id ? 1 : -1).map(\n                            ({ id, position, responsibilities, sector, time, location }) => (\n                                <li className='exp1' key={id}>\n                                    <div className=\"timelineMarker\"></div>\n                                    <div className=\"timelineInfo\">\n                                        <p>{time}\n                                            <span>{location}</span>\n                                        </p>\n                                    </div>\n\n                                    <div className=\"timelineContent\">\n                                        <h5>{position}</h5>\n\n                                        <p className=\"timelineTitle\">{sector} </p>\n                                        <ul>\n                                            {responsibilities?.map((item, key) => (\n                                                <li key={key}>{item}</li>\n                                            ))\n                                            }\n                                        </ul>\n                                    </div>\n                                </li>\n                            ))\n                    }\n                </ul>\n            }\n        </ >\n    )\n}\nexport default memo(Experience);\n","import React, {memo} from 'react'\nimport { ProgressBar } from 'react-bootstrap';\n\n\nfunction calculatePercentOfKnowledge(level) {\n\n    if (level === \"A1\") {\n        return Math.round(100 / 6)\n    } else if (level === 'A2') {\n        return Math.round(100 / 3)\n    } else if (level === 'B1') {\n        return Math.round(100 / 2)\n    } else if (level === 'B2') {\n        return Math.round(100 * 2 / 3)\n    } else if (level === 'C1') {\n        return Math.round(100 * 5 / 6)\n    } else if (level === '1.1') {\n        return Math.round(100 / 10)\n    } else if (level === '1.2') {\n        return Math.round(100 / 5)\n    } else if (level === '2.1') {\n        return Math.round(100 * 3 / 10)\n    } else if (level === '2.2') {\n        return Math.round(100 * 2 / 5)\n    } else if (level === '2.3') {\n        return Math.round(100 / 2)\n    } else if (level === '2.4') {\n        return Math.round(100 * 3 / 5)\n    } else if (level === '3.1') {\n        return Math.round(100 * 7 / 10)\n    } else if (level === '3.2') {\n        return Math.round(100 * 4 / 5)\n    } else if (level === '4.1') {\n        return Math.round(100 * 9 / 10)\n    } else {\n        return 100;\n    }\n}\n\nconst TableLang = ({data}) => {\n\n    let list = []\n    let progressBar = []\n    let infoTitle = []\n    let infoValidity = []\n\n    \n    if (data) {\n        list = data.list.map((i, key) => (\n            <p key={key}>{i.name}</p>\n        ))\n        progressBar = data.list.map(({isLearning, level}, key) => (\n            <ProgressBar\n                key={key}\n                now={calculatePercentOfKnowledge(level)}\n                label={level}\n                animated={isLearning}\n            />\n        ))\n        infoTitle = data.info.map(({title}, key) => (\n            <p key={key}>{title}</p>\n        ))\n        infoValidity = data.info.map(({valid}, key) => (\n            <p key={key}>{valid}</p>\n        ))\n\n    }\n\n\n    return (\n        <>\n            <div className=\"bodyLang\">\n                <div>\n                    <span className=\"headLang\">Languages</span>\n                    <div className=\"tableLang\">\n                        <div>\n                            {list}\n                        </div>\n                        <span>\n                            {progressBar}\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <span className=\"headLang\">Info</span>\n                    <div className=\"tableLang\">\n                        <div >\n                            {infoTitle}\n                        </div>\n                        <div>\n                            {infoValidity}\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default memo(TableLang)","import React, { useRef, useEffect, memo } from 'react'\nimport { Col, Row, Card, CardDeck } from 'react-bootstrap';\nimport { gsap, Power3 } from \"gsap\"\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\ngsap.registerPlugin(ScrollTrigger);\n\n\nconst Skills = ({ icons }) => {\n    let skill = useRef(null)\n    let tl = gsap.timeline()\n\n    //Animation\n    useEffect(() => {\n        tl.from('.card svg', 1, { stagger: 0.15, y: 30, opacity: 0, duration: .1, ease: Power3.easeIn })\n            .from('.card p', .8, { stagger: 0.15, scale: 0, ease: Power3.easeIn }, \"-=2\")\n        gsap.to(skill, 0, { css: { opacity: 1 } })\n\n        ScrollTrigger.create({\n            animation: tl,\n            trigger: skill,\n            // markers: true,\n            start: 'top 80%',\n            toggleActions: \"restart none none restart\"\n        })\n\n    }, [tl])\n\n\n    let iconsCoding = []\n    let iconsDesign = []\n    \n    if (icons){\n        iconsCoding = icons.coding.map(({name, icon}) => (\n            <Card key={name} >\n                {icon}\n                <Card.Body>\n                    <Card.Text>{name}</Card.Text>\n                </Card.Body>\n            </Card>\n        ))\n        iconsDesign = icons.design.map(({name, icon}) => (\n            <Card key={name}>\n                {icon}\n                <Card.Body>\n                    <Card.Text>{name}</Card.Text>\n                </Card.Body>\n            </Card>\n        ))\n    }\n\n\n    return (\n        <Row className=\"row-skills\">\n            <Col lg={3} md={3} className=\"p-0\">\n                <span data-text=\"Skills\" className=\"headLang\">Skills</span>\n                <span className='headHided'>SKILLS</span>\n            </Col>\n            <Col lg={9} md={9} className=\"icons\" >\n                <div>\n                    <h4>Development</h4>\n                    <CardDeck className=\"coding\" ref={el => skill = el}>\n                        {iconsCoding}\n                    </CardDeck>\n                </div>\n                <div>\n                    <h4>Design</h4>\n                    <CardDeck className=\"design\" ref={el => skill = el}>\n                        {iconsDesign}\n                    </CardDeck>\n                </div>\n\n            </Col>\n\n        </Row>\n    )\n}\n\nexport default memo(Skills)\n","import React, {memo} from 'react'\nimport { Col, Row, Jumbotron } from 'react-bootstrap';\n\nconst JumbotronComponent = ({ icons }) => {\n\n    return (\n        <Jumbotron>\n            <Row className='d-flex flex-row m-0'>\n                <Col lg={12} className=\"p-0\">\n                    <p>I work with/on:</p>\n                </Col>\n                <Col lg={12} className=\"p-0\">\n                    <ul>\n                        {icons.frames.map(({name, icon}) => (\n                            <li key={name}>{icon}\n                                <span>{name}</span>\n                            </li>\n                        ))} \n                    </ul>\n                </Col>\n            </Row>\n        </Jumbotron>\n    )\n}\n\nexport default memo(JumbotronComponent)\n","import React, { useContext } from 'react'\nimport TopBar from \"./TopBar\";\nimport Education from '../Education/Education'\nimport Experience from '../Experience/Experience'\nimport TableLang from './TableLang';\nimport Skills from './Skills';\nimport JumbotronComponent from \"./Jumbotron\"\nimport { DataContext } from \"../../context/DataContext\"\n\nimport { BsBootstrap } from 'react-icons/bs';\nimport { AiOutlineHtml5 } from 'react-icons/ai';\nimport { FaSass, FaProjectDiagram, FaMicrosoft } from 'react-icons/fa';\nimport {\n    DiLinux, DiGithubBadge, DiNodejsSmall, DiMongodb, DiJavascript1,\n    DiNodejs, DiReact, DiVisualstudio\n} from 'react-icons/di';\nimport { FiFigma } from 'react-icons/fi';\nimport { SiInkscape, SiAdobephotoshop, SiRedux, SiFirebase, SiPostman, SiMysql } from 'react-icons/si';\n\nimport Loader from '../../Loader/Loader';\n\n\nconst list = {\n    design: [\n        { name: \"Figma\", icon: <FiFigma /> },\n        { name: \"Inkscape\", icon: <SiInkscape /> },\n        { name: \"Photoshop\", icon: <SiAdobephotoshop /> },\n        { name: \"Draw.io diagrams\", icon: <FaProjectDiagram /> },\n    ],\n    frames: [\n        { name: \"GitHub\", icon: <DiGithubBadge /> },\n        { name: \"Linux mint\", icon: <DiLinux /> },\n        { name: \"Microsoft\", icon: <FaMicrosoft /> },\n        { name: \"Postman\", icon: <SiPostman /> },\n        { name: \"Visual Studio\", icon: <DiVisualstudio /> },\n    ],\n    coding: [\n        { name: \"HTML\", icon: <AiOutlineHtml5 /> },\n        { name: \"CSS/SASS\", icon: <FaSass /> },\n        { name: \"JavaScript\", icon: <DiJavascript1 /> },\n        { name: \"Bootstrap\", icon: <BsBootstrap /> },\n        { name: \"ExpressJS\", icon: <DiNodejsSmall /> },\n        { name: \"ReactJS\", icon: <DiReact /> },\n        { name: \"Redux\", icon: <SiRedux /> },\n        { name: \"NodeJS\", icon: <DiNodejs /> },\n        { name: \"MongoDB\", icon: <DiMongodb /> },\n        { name: \"MySQL\", icon: <SiMysql /> },\n        { name: \"Firebase\", icon: <SiFirebase /> }\n    ]\n}\n\nconst About = () => {\n\n    const { dataAbout, loading, imageUrl } = useContext(DataContext);\n    const data = dataAbout\n\n\n    return (\n        <div className=\"container-about\">\n            {loading ? <Loader /> :\n                <>\n                    <TopBar data={data?.topbar} img={imageUrl && imageUrl} />\n                    <TableLang data={data?.languages} />\n\n                    <Skills icons={list} />\n\n                    <div className=\"history\">\n                        <div>\n                            <Education data={data?.Education} />\n                        </div>\n                        <div>\n                            <Experience data={data?.Experience} />\n                        </div>\n                    </div>\n\n                    <JumbotronComponent icons={list} />\n\n                </>\n            }\n        </div>\n    )\n}\n\n\nexport default About;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nconst Header = ({header, name, paragraph}) => {\n\n    return (\n        <div className=\"header\">\n            <h1>{header}</h1>\n            <p><Link to=\"/\">{name}</Link>{paragraph}</p>\n        </div>\n    )\n}\n\nexport default Header\n"],"names":["TopBar","_ref","data","img","paragraphs","useState","description","pagraphMe","paragraphPrev","pagraphSoft","paragrapgShift","map","par","key","_jsx","children","me","prev","_jsxs","soft","thus","shift","now","_Fragment","className","Header","header","title","paragraph","name","Image","src","memo","Education","isVisible","setVisibility","tl","gsap","timeline","useEffect","from","scale","opacity","stagger","ease","Button","variant","block","onClick","sort","a","b","id","_ref2","time","instituion","subtitle","Experience","position","responsibilities","sector","location","item","calculatePercentOfKnowledge","level","Math","round","TableLang","list","progressBar","infoTitle","infoValidity","i","isLearning","ProgressBar","label","animated","info","_ref3","_ref4","valid","registerPlugin","ScrollTrigger","Skills","icons","skill","useRef","y","duration","Power3","easeIn","to","css","create","animation","trigger","start","toggleActions","iconsCoding","iconsDesign","coding","icon","Card","Body","Text","design","Row","Col","lg","md","CardDeck","ref","el","JumbotronComponent","Jumbotron","frames","FiFigma","SiInkscape","SiAdobephotoshop","FaProjectDiagram","DiGithubBadge","DiLinux","FaMicrosoft","SiPostman","DiVisualstudio","AiOutlineHtml5","FaSass","DiJavascript1","BsBootstrap","DiNodejsSmall","DiReact","SiRedux","DiNodejs","DiMongodb","SiMysql","SiFirebase","About","dataAbout","loading","imageUrl","useContext","DataContext","Loader","topbar","languages","Link"],"sourceRoot":""}