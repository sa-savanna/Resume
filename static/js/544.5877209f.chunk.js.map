{"version":3,"file":"static/js/544.5877209f.chunk.js","mappings":"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","sources":["components/Pages/About/TopBar.js","components/Pages/Education/Education.js","components/Pages/Experience/Experience.js","components/Pages/About/TableLang.js","components/Pages/About/Skills.js","components/Pages/About/Jumbotron.js","components/Pages/About/About.js","components/Pages/Header.js"],"sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { Image } from 'react-bootstrap';\nimport ava from '../Ava.JPG';\nimport Header from '../Header';\n\nconst TopBar = ({ data }) => {\n\n\n  const [paragraphs] = useState([data && data.description])\n\n  return (\n    <>\n      <div className=\"topbar\">\n        <Header\n          header={data && data.header.title}\n          paragraph={data && data.header.paragraph}\n          name={data && data.header.name}\n        />\n\n        <div className=\"aboutme\">\n\n          {paragraphs.map((par, key) => (\n            <p key={key}>\n              {par.me}\n            </p>\n          ))}\n          {paragraphs.map((par, key) => (\n            <p key={key}>\n              {par.prev}\n            </p>\n          ))}\n          {paragraphs.map((par, key) => (\n            <p key={key}>\n              {par.soft}\n              < br />\n              {par.thus}\n            </p>\n          ))}\n          <hr />\n          {paragraphs.map((par, key) => (\n            <p key={key}>\n              {par.shift}\n              < br />\n              {par.now}\n            </p>\n          ))}\n        </div>\n      </div >\n\n      <div className=\"rectangle\">\n        <Image className=\"photo\" src={ava} />\n      </div>\n    </>\n  )\n\n}\n\n\nexport default TopBar;","import React, { useState, useEffect } from 'react'\nimport { Button } from 'react-bootstrap';\nimport { gsap } from \"gsap\"\n\nconst Education = ({ data }) => {\n    const [isVisible, setVisibility] = useState(false)\n  \n    let tl = gsap.timeline()\n\n    const toggle = () => {\n        setVisibility(!isVisible);\n    }\n\n    useEffect(() => {\n        tl.from(\".exp\", .5, {\n            scale: 0.5,\n            opacity: 0,\n            stagger: 0.2,\n            ease: \"back.out(1.7)\"\n        });\n\n    }, [tl])\n\n    return (\n        <>\n            <Button variant=\"primary\" block onClick={toggle}>Education</Button>\n            {\n                isVisible &&\n                <ul>\n                    {\n                        data && data.sort((a, b) => b.id > a.id ? 1 : -1).map((list, i) => (\n                            <li key={i} className=\"exp\">\n                                <div className=\"timelineInfo\">\n                                    <p>{list.time}</p>\n                                </div>\n                                <div className=\"timelineMarker\"></div>\n                                <div className=\"timelineContent\">\n                                    <h5>{list.instituion}</h5>\n                                    <p>{list.title}\n                                        <em> {list.subtitle} </em>\n                                    </p>\n                                </div>\n                            </li>\n                        ))\n                    }\n                </ul>\n            }\n        </>\n    )\n}\n\nexport default Education","import React, { useState, useEffect } from 'react'\nimport { Button } from 'react-bootstrap';\nimport { gsap } from \"gsap\"\n\nconst Experience = ({ data }) => {\n    const [isVisible, setVisibility] = useState(false)\n\n    let tl = gsap.timeline()\n\n    const toggle = () => {\n        setVisibility(!isVisible);\n    }\n\n    useEffect(() => {\n        tl.from(\".exp1\", .5, {\n            scale: 0.5,\n            opacity: 0,\n            stagger: 0.2,\n            ease: \"back.out(1.7)\"\n        });\n\n    }, [tl])\n\n    return (\n        <>\n            <Button variant=\"primary\" block onClick={toggle}>Experience</Button>\n\n            {\n                isVisible &&\n                <ul>\n                    {\n                        data && data.sort((a, b) => b.id > a.id ? 1 : -1).map(\n                            ({ id, position, responsibilities, sector, time, location }) => (\n                                <li className='exp1' key={id}>\n                                    <div className=\"timelineMarker\"></div>\n                                    <div className=\"timelineInfo\">\n                                        <p>{time}\n                                            <span>{location}</span>\n                                        </p>\n                                    </div>\n\n                                    <div className=\"timelineContent\">\n                                        <h5>{position}</h5>\n\n                                        <p className=\"timelineTitle\">{sector} </p>\n\n                                        {responsibilities && responsibilities.map(item => (\n                                            <>\n                                                {/* <span key={item}><u>{item}</u></span> */}\n                                                <ul>\n                                                    <li key={item}>{item}</li>\n                                                </ul>\n                                            </>\n                                        ))\n                                        }\n                                    </div>\n                                </li>\n                            ))\n                    }\n                </ul>\n            }\n        </ >\n    )\n}\nexport default Experience;\n","import React from 'react'\nimport { ProgressBar } from 'react-bootstrap';\n\n\nfunction calculatePercentOfKnowledge(level) {\n\n    if (level === \"A1\") {\n        return Math.round(100 / 6)\n    } else if (level === 'A2') {\n        return Math.round(100 / 3)\n    } else if (level === 'B1') {\n        return Math.round(100 / 2)\n    } else if (level === 'B2') {\n        return Math.round(100 * 2 / 3)\n    } else if (level === 'C1') {\n        return Math.round(100 * 5 / 6)\n    } else if (level === '1.1') {\n        return Math.round(100 / 10)\n    } else if (level === '1.2') {\n        return Math.round(100 / 5)\n    } else if (level === '2.1') {\n        return Math.round(100 * 3 / 10)\n    } else if (level === '2.2') {\n        return Math.round(100 * 2 / 5)\n    } else if (level === '2.3') {\n        return Math.round(100 / 2)\n    } else if (level === '2.4') {\n        return Math.round(100 * 3 / 5)\n    } else if (level === '3.1') {\n        return Math.round(100 * 7 / 10)\n    } else if (level === '3.2') {\n        return Math.round(100 * 4 / 5)\n    } else if (level === '4.1') {\n        return Math.round(100 * 9 / 10)\n    } else {\n        return 100;\n    }\n}\n\nconst TableLang = ({data}) => {\n\n    let list = []\n    let progressBar = []\n    let infoTitle = []\n    let infoValidity = []\n\n    \n    if (data) {\n        list = data.list.map(({name}) => (\n            <p key={name.key}>{name}</p>\n        ))\n        progressBar = data.list.map(({isLearning, level, name}) => (\n            <ProgressBar\n                key={name}\n                now={calculatePercentOfKnowledge(level)}\n                label={level}\n                animated={isLearning}\n            />\n        ))\n        infoTitle = data.info.map(({title}) => (\n            <p key={title}>{title}</p>\n        ))\n        infoValidity = data.info.map(({valid}) => (\n            <p key={valid}>{valid}</p>\n        ))\n\n    }\n\n\n    return (\n        <>\n            <div className=\"bodyLang\">\n                <div>\n                    <span className=\"headLang\">Languages</span>\n                    <div className=\"tableLang\">\n                        <div>\n                            {list}\n                        </div>\n                        <span>\n                            {progressBar}\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <span className=\"headLang\">Info</span>\n                    <div className=\"tableLang\">\n                        <div >\n                            {infoTitle}\n                        </div>\n                        <div>\n                            {infoValidity}\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default TableLang","import React, { useRef, useEffect } from 'react'\nimport { Col, Row, Card, CardDeck } from 'react-bootstrap';\nimport { gsap, Power3 } from \"gsap\"\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\ngsap.registerPlugin(ScrollTrigger);\n\n\nconst Skills = ({ icons }) => {\n\n    let skill = useRef(null)\n    let tl = gsap.timeline()\n\n    useEffect(() => {\n        tl.from('.card svg', 1, { stagger: 0.15, y: 30, opacity: 0, duration: .2, ease: Power3.easeIn })\n            .from('.card p', .8, { stagger: 0.15, scale: 0, ease: Power3.easeIn }, \"-=2\")\n        gsap.to(skill, 0, { css: {opacity: 1 } })\n\n        ScrollTrigger.create({\n            animation: tl,\n            trigger: skill,\n            // markers: true,\n            start: 'top 80%',\n            toggleActions: \"restart none none restart\"\n        })\n\n    }, [tl])\n\n    return (\n        <Row className=\"row-skills\">\n            <Col lg={3} md={3} className=\"p-0\">\n                <span data-text=\"Skills\" className=\"headLang\">Skills</span>\n                <span className='headHided'>SKILLS</span>\n            </Col>\n            <Col lg={9} md={9} className=\"icons\" >\n                <div>\n                    <h4>Development</h4>\n                    <CardDeck className=\"coding\" ref={el => skill = el}>\n                        {icons.coding.map(icon => (\n                            <Card key={icon.name} >\n                                {icon.icon}\n                                <Card.Body>\n                                    <Card.Text>{icon.name}</Card.Text>\n                                </Card.Body>\n                            </Card>\n                        ))}\n                    </CardDeck>\n                </div>\n                <div>\n                    <h4>Design</h4>\n                    <CardDeck className=\"design\" ref={el => skill = el}>\n                        {icons.design.map(icon => (\n                            <Card key={icon.name}>\n                                {icon.icon}\n                                <Card.Body>\n                                    <Card.Text>{icon.name}</Card.Text>\n                                </Card.Body>\n                            </Card>\n                        ))}\n                    </CardDeck>\n                </div>\n\n            </Col>\n\n        </Row>\n    )\n}\n\nexport default Skills\n","import React from 'react'\nimport { Col, Row, Jumbotron } from 'react-bootstrap';\n\nconst JumbotronComponent = ({ icons }) => {\n    return (\n        <Jumbotron>\n            <Row className='d-flex flex-row m-0'>\n                <Col lg={12} className=\"p-0\">\n                    <p>I work with/on:</p>\n                </Col>\n                <Col lg={12} className=\"p-0\">\n                    <ul>\n                        {icons.frames.map(frame => (\n                            <li key={frame.name}>{frame.icon}\n                                <span>{frame.name}</span>\n                            </li>\n                        ))} \n                    </ul>\n                </Col>\n            </Row>\n        </Jumbotron>\n    )\n}\n\nexport default JumbotronComponent\n","import React, { useContext } from 'react'\nimport TopBar from \"./TopBar\";\nimport Education from '../Education/Education'\nimport Experience from '../Experience/Experience'\nimport TableLang from './TableLang';\nimport Skills from './Skills';\nimport JumbotronComponent from \"./Jumbotron\"\nimport { DataContext } from \"../../context/DataContext\"\n\nimport { BsBootstrap } from 'react-icons/bs';\nimport { AiOutlineHtml5 } from 'react-icons/ai';\nimport { FaSass, FaProjectDiagram, FaMicrosoft } from 'react-icons/fa';\nimport {\n    DiLinux, DiGithubBadge, DiNodejsSmall, DiMongodb, DiJavascript1,\n    DiNodejs, DiReact, DiVisualstudio\n} from 'react-icons/di';\nimport { FiFigma } from 'react-icons/fi';\nimport { SiInkscape, SiAdobephotoshop, SiRedux, SiFirebase, SiPostman, SiMysql } from 'react-icons/si';\n\n// import { ReactComponent as Postman } from './postman.svg'\n// import { ReactComponent as Firebase } from './firebase-icon.svg'\n// import { ReactComponent as Draw } from './draw-io.svg'\n\nimport Loader from '../../Loader/Loader';\n\n\nconst icons = {\n    design: [\n        { name: \"Figma\", icon: <FiFigma /> },\n        { name: \"Inkscape\", icon: <SiInkscape /> },\n        { name: \"Photoshop\", icon: <SiAdobephotoshop /> },\n        { name: \"Draw.io diagrams\", icon: <FaProjectDiagram /> },\n    ],\n    frames: [\n        { name: \"GitHub\", icon: <DiGithubBadge style={{ fontSize: '4em' }} /> },\n        { name: \"Linux mint\", icon: <DiLinux /> },\n        { name: \"Microsoft\", icon: <FaMicrosoft /> },\n        { name: \"Postman\", icon: <SiPostman/> },\n        { name: \"Visual Studio\", icon: <DiVisualstudio /> },\n    ],\n    coding: [\n        { name: \"HTML\", icon: <AiOutlineHtml5 /> },\n        { name: \"CSS/SASS\", icon: <FaSass /> },\n        { name: \"JavaScript\", icon: <DiJavascript1 /> },\n        { name: \"Bootstrap\", icon: <BsBootstrap /> },\n        { name: \"ExpressJS\", icon: <DiNodejsSmall /> },\n        { name: \"ReactJS\", icon: <DiReact /> },\n        { name: \"Redux\", icon: <SiRedux /> },\n        { name: \"NodeJS\", icon: <DiNodejs /> },\n        { name: \"MongoDB\", icon: <DiMongodb /> },\n        { name: \"MySQL\", icon: <SiMysql /> },\n        { name: \"Firebase\", icon: <SiFirebase /> }\n        // { name: \"Firebase\", icon: <Firebase className=\"firebaseIcon\" /> }\n    ]\n}\n\n\nconst About = () => {\n\n    const { dataAbout, loading } = useContext(DataContext);\n    const data = dataAbout\n\n    return (\n        <div className=\"container2\">\n            {loading ? <Loader /> :\n                <>\n                    <TopBar data={data && data.topbar} />\n                    <TableLang data={data && data.languages} />\n\n                    <Skills icons={icons} />\n\n                    <div className=\"profile\">\n                        <div>\n                            <Education data={data && data.Education} />\n                        </div>\n                        <div>\n                            <Experience data={data && data.Experience} />\n                        </div>\n                    </div>\n\n                    <JumbotronComponent icons={icons} />\n                </>\n            }\n        </div>\n    )\n}\n\n\nexport default About;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nconst Header = ({header, name, paragraph}) => {\n\n    return (\n        <div className=\"header\">\n            <h1>{header}</h1>\n            <p><Link to=\"/\">{name}</Link>{paragraph}</p>\n        </div>\n    )\n}\n\nexport default Header\n"],"names":["_ref","data","paragraphs","useState","description","_jsxs","_Fragment","children","className","_jsx","Header","header","title","paragraph","name","map","par","key","me","prev","soft","thus","shift","now","Image","src","ava","isVisible","setVisibility","tl","gsap","timeline","useEffect","from","scale","opacity","stagger","ease","Button","variant","block","onClick","toggle","sort","a","b","id","list","i","time","instituion","subtitle","_ref2","position","responsibilities","sector","location","item","calculatePercentOfKnowledge","level","Math","round","progressBar","infoTitle","infoValidity","_ref3","isLearning","ProgressBar","label","animated","info","_ref4","_ref5","valid","registerPlugin","ScrollTrigger","icons","skill","useRef","y","duration","Power3","easeIn","to","css","create","animation","trigger","start","toggleActions","Row","Col","lg","md","CardDeck","ref","el","coding","icon","Card","Body","Text","design","Jumbotron","frames","frame","FiFigma","SiInkscape","SiAdobephotoshop","FaProjectDiagram","DiGithubBadge","style","fontSize","DiLinux","FaMicrosoft","SiPostman","DiVisualstudio","AiOutlineHtml5","FaSass","DiJavascript1","BsBootstrap","DiNodejsSmall","DiReact","SiRedux","DiNodejs","DiMongodb","SiMysql","SiFirebase","About","dataAbout","loading","useContext","DataContext","Loader","TopBar","topbar","TableLang","languages","Skills","Education","Experience","JumbotronComponent","Link"],"sourceRoot":""}